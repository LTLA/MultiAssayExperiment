% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/listToMap.R, R/mapToList.R
\name{listToMap}
\alias{listToMap}
\alias{mapToList}
\alias{sampleMap}
\title{Convert map from data.frame or DataFrame to list and vice versa}
\usage{
listToMap(listmap, type = "colnames")

mapToList(dfmap, assayCol = "assayname")
}
\arguments{
\item{listmap}{A \code{list} class object containing names of either 
experiments, assays or features.}

\item{type}{Any of the valid types of maps including colnames, rownames, 
and assays.}

\item{dfmap}{A \code{data.frame} or \code{DataFrame} object with
identifiers in the first column}

\item{assayCol}{A character vector of length one indicating the assay
names column}
}
\value{
A \code{DataFrame} class object of names

A \code{list} object of DataFrames for each assay
}
\description{
The \code{mapToList} function provides a convenient way of reordering a
\code{data.frame} to a \code{list}. The \code{listToMap} function does the 
opposite by taking a \code{list} and converting it to \code{DataFrame}.
}
\section{Functions}{
\itemize{
\item \code{listToMap}: Inverse of the listToMap function
}}
\examples{
## Create sample maps for each experiment
exprmap <- data.frame(
    master = c("Jack", "Jill", "Barbara", "Bob"),
    assay = c("array1", "array2", "array3", "array4"), 
    stringsAsFactors = FALSE)
methylmap <- data.frame(
    master = c("Jack", "Jack", "Jill", "Barbara", "Bob"),
    assay = c("methyl1", "methyl2", "methyl3", "methyl4", "methyl5"),
    stringsAsFactors = FALSE)

## Combine as a named list and convert to a DataFrame
mylist <- list(exprmap, methylmap)
names(mylist) <- c("Affy", "Methyl450k")
myDF <- listToMap(mylist)
mylist <- mapToList(myDF)
}

