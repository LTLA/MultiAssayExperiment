% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MultiAssayExperiment-subset-methods.R
\docType{methods}
\name{subsetBy}
\alias{subsetBy}
\alias{[,MultiAssayExperiment,ANY-method}
\alias{subsetByColData}
\alias{subsetByRows}
\alias{subsetByColumns}
\alias{subsetByAssay}
\alias{subset}
\alias{[,MultiAssayExperiment,ANY,ANY,ANY-method}
\alias{[[,MultiAssayExperiment,ANY,ANY-method}
\alias{[[<-,MultiAssayExperiment,ANY,ANY-method}
\alias{subsetByAssay}
\alias{subsetByAssay,MultiAssayExperiment-method}
\alias{subsetByColData}
\alias{subsetByColData,MultiAssayExperiment,ANY-method}
\alias{subsetByColData,MultiAssayExperiment,character-method}
\alias{subsetByColumn}
\alias{subsetByColumn,MultiAssayExperiment,list-method}
\alias{subsetByColumn,MultiAssayExperiment,List-method}
\alias{subsetByRow}
\alias{subsetByRow,MultiAssayExperiment,ANY-method}
\alias{subsetByRow,MultiAssayExperiment,logical-method}
\alias{subsetByRow,MultiAssayExperiment,list-method}
\alias{subsetByRow,MultiAssayExperiment,List-method}
\title{Subsetting a MultiAssayExperiment object}
\usage{
\S4method{[}{MultiAssayExperiment,ANY,ANY,ANY}(x, i, j, k, ..., drop = TRUE)

\S4method{[[}{MultiAssayExperiment,ANY,ANY}(x, i, j, ...)

\S4method{[[}{MultiAssayExperiment,ANY,ANY}(x, i, j, ...) <- value

subsetByAssay(x, y)

\S4method{subsetByAssay}{MultiAssayExperiment}(x, y)

subsetByColData(x, y)

\S4method{subsetByColData}{MultiAssayExperiment,ANY}(x, y)

\S4method{subsetByColData}{MultiAssayExperiment,character}(x, y)

subsetByColumn(x, y)

\S4method{subsetByColumn}{MultiAssayExperiment,list}(x, y)

\S4method{subsetByColumn}{MultiAssayExperiment,List}(x, y)

subsetByRow(x, y, ...)

\S4method{subsetByRow}{MultiAssayExperiment,ANY}(x, y, ...)

\S4method{subsetByRow}{MultiAssayExperiment,logical}(x, y)

\S4method{subsetByRow}{MultiAssayExperiment,list}(x, y)

\S4method{subsetByRow}{MultiAssayExperiment,List}(x, y)
}
\arguments{
\item{x}{A \code{MultiAssayExperiment}}

\item{i}{Either a \code{character}, \code{integer}, \code{logical} or
\code{GRanges} object for subsetting by rows}

\item{j}{Either a \code{character}, \code{logical}, or \code{numeric} vector
for subsetting by \code{colData} rows. See details for more information.}

\item{k}{Either a \code{character}, \code{logical}, or \code{numeric} vector
for subsetting by assays}

\item{...}{Additional arguments passed on to lower level functions.}

\item{drop}{logical (default TRUE) whether to drop empty assay elements
in the \code{ExperimentList}}

\item{value}{An assay compatible with the MultiAssayExperiment API}

\item{y}{Any argument used for subsetting, can be a \code{character},
\code{logical}, \code{integer}, \code{list} or \code{List} vector}
}
\description{
A set of functions for extracting and dividing a
\code{MultiAssayExperiment}
}
\details{
Subsetting a MultiAssayExperiment by the \strong{j} index can yield a call
to either \code{subsetByColData} or \code{subsetByColumn}. For vector inputs,
the subset will be applied to the \code{colData} rows. For \code{List}-type
inputs, the List will be applied to each of the elements in the
\code{ExperimentList}.
The order of the subsetting elements in the
\code{List} must match that of the \code{ExperimentList} in the
\code{MultiAssayExperiment}.

\itemize{
\item subsetByRow
\item subsetBycolData: Select biological units by vector input types
\item subsetByColumn
\item subsetByAssay
}
}
\examples{
## Load a MultiAssayExperiment example
example("MultiAssayExperiment")

## Using experiment names
subsetByAssay(myMultiAssayExperiment, "Affy")

## Using numeric indicators
subsetByAssay(myMultiAssayExperiment, 1:2)

## Using a logical vector
subsetByAssay(myMultiAssayExperiment, c(TRUE, FALSE, TRUE))

## Subset by character vector (Jack)
subsetByColData(myMultiAssayExperiment, "Jack")

## Subset by numeric index of colData rows (Jack and Bob)
subsetByColData(myMultiAssayExperiment, c(1, 3))

## Subset by logical indicator of colData rows (Jack and Jill)
subsetByColData(myMultiAssayExperiment, c(TRUE, TRUE, FALSE, FALSE))

subsetByColumn(myMultiAssayExperiment, list(Affy = 1:2,
                Methyl450k = c(3,5,2), RNASeqGene = 2:4, CNVgistic = 1))

subsetWith <- IRanges::mendoapply(`[`, colnames(myMultiAssayExperiment),
                        MoreArgs = list(1:2))
subsetByColumn(myMultiAssayExperiment, subsetWith)

## Use a GRanges object to subset rows where ranged data present
egr <- GenomicRanges::GRanges(seqnames = "chr1",
    IRanges::IRanges(start = 1, end = 3), strand = "-")
subsetByRow(myMultiAssayExperiment, egr)

## Use a logical vector (recycling used)
subsetByRow(myMultiAssayExperiment, c(TRUE, FALSE))

## Use a character vector
subsetByRow(myMultiAssayExperiment, "ENST00000355076")

}
